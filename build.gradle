allprojects {
	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.springframework.boot'

	sourceCompatibility = '11'
	targetCompatibility = '11'

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'io.github.cdimascio:java-dotenv:5.1.3'
		compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
		compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
		compile('org.springframework.boot:spring-boot-starter-web')

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
		testImplementation 'org.mockito:mockito-core:2.+'
		testImplementation 'com.github.javafaker:javafaker:1.0.1'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
	}


	test {
		useJUnitPlatform()

		testLogging {
			events "passed", "skipped", "failed"
		}
	}


	task view_paths {
		doLast { task ->
			println "$task.project.name"
			println "------------------"
			println "Main: $sourceSets.main.java.srcDirTrees"
			println "   Resources: $sourceSets.main.resources.srcDirTrees"
			println "Tests: $sourceSets.test.java.srcDirTrees"
			println "   Resources: $sourceSets.test.resources.srcDirTrees"
		}
	}
}


subprojects {
	group = "tv.codely.${rootProject.name}"

	sourceSets {
		main {
			java { srcDirs = ['main'] }
			resources { srcDirs = ['main/resources'] }
		}

		test {
			java { srcDirs = ['test'] }
			resources { srcDirs = ['test/resources'] }
		}
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-web:2.1.8.RELEASE'

		testImplementation rootProject.sourceSets.main.output
		testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.1.RELEASE'

		if (project.name != "shared") {
			implementation project(":shared")
			testImplementation project(":shared").sourceSets.test.output
		}

	}

	bootJar {
		enabled = false
	}

	jar {
		enabled = true
	}
}

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE')
	}
}

sourceSets {
	main {
		java { srcDirs = ['apps/main'] }
		resources { srcDirs = ['apps/main/resources'] }
	}

	test {
		java { srcDirs = ['apps/test'] }
		resources { srcDirs = ['apps/test/resources'] }
	}
}

apply plugin: 'application'
group = 'com.tacs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

mainClassName = 'utn.tacs.apps.Starter'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web:2.1.8.RELEASE'

	implementation project(":tp")
	implementation project(":shared")

	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.8.RELEASE'
	testImplementation project(":shared").sourceSets.test.output
}
